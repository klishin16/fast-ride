{
  "name": "backend",
  "version": "0.3.0",
  "license": "MIT",
  "keywords": [
    "nestjs",
    "prisma",
    "prisma client",
    "typescript",
    "passport",
    "graphql"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/fivethree-team/nestjs-prisma-client-example.git"
  },
  "bugs": {
    "url": "https://github.com/fivethree-team/nestjs-prisma-client-example/issues"
  },
  "scripts": {
    "build": "nest build",
    "production:build": "nest build",
    "start": "NODE_ENV=development nest start",
    "start:prod": "NODE_ENV=production nest start",
    "start:dev": "NODE_ENV=development; nest start --watch",
    "start:debug": "nest start --debug --watch",
    "production:execute": "NODE_ENV=production; node dist/src/main.js",

    "deploy:vercel": "nest build && now",

    "migrate:dev": "NODE_ENV=development; prisma migrate dev --preview-feature",
    "migrate:dev:create": "prisma migrate dev --create-only --preview-feature",
    "migrate:reset": "prisma migrate reset --preview-feature",
    "migrate:deploy": "npx env-cmd --file config/env/db.env prisma migrate deploy --preview-feature",
    "migrate:status": "npx prisma migrate status --preview-feature",
    "migrate:resolve": "npx prisma migrate resolve --preview-feature",

    "prisma:studio": "npx prisma studio",
    "prisma:generate": "npx prisma generate",
    "prisma:generate:watch": "npx prisma generate --watch",

    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "start:db": "yarn run migrate:up && yarn run prisma:generate && yarn run seed",
    "start:db:deploy": "TODO",
    "seed": "prisma db seed",
    "seed:deploy": "npx env-cmd --file config/env/db.env prisma db seed",

    "docker:migrate": "docker-compose -f docker-compose.migrate.yml up -d",
    "docker:db": "docker-compose -f docker-compose.db.yml up -d",
    "docker:seed": "docker exec -it nest-api npm run seed",
    "docker": "docker-compose up -d",
    "docker:build": "docker-compose build"
  },
  "dependencies": {
    "@devoxa/prisma-relay-cursor-connection": "2.0.3",
    "@hapi/joi": "^17.1.1",
    "@nestjs/apollo": "^10.0.2",
    "@nestjs/common": "8.4.5",
    "@nestjs/config": "1.1.6",
    "@nestjs/core": "8.4.5",
    "@nestjs/graphql": "10.0.2",
    "@nestjs/jwt": "8.0.0",
    "@nestjs/passport": "8.1.0",
    "@nestjs/platform-express": "8.4.5",
    "@nestjs/swagger": "5.1.5",
    "@prisma/client": "3.8.1",
    "apollo-server-express": "^3.6.3",
    "bcrypt": "5.0.1",
    "class-transformer": "0.5.1",
    "class-validator": "0.13.2",
    "graphql": "^16.5.0",
    "graphql-scalars": "^1.14.1",
    "graphql-subscriptions": "1.2.1",
    "nestjs-prisma": "^0.15.0",
    "passport": "0.5.2",
    "passport-jwt": "4.0.0",
    "reflect-metadata": "0.1.13",
    "rimraf": "3.0.2",
    "rxjs": "7.5.2",
    "swagger-ui-express": "4.3.0"
  },
  "devDependencies": {
    "@nestjs/cli": "8.2.0",
    "@nestjs/testing": "8.4.5",
    "@types/bcrypt": "5.0.0",
    "@types/chance": "1.1.3",
    "@types/express": "4.17.13",
    "@types/hapi__joi": "^17.1.8",
    "@types/jest": "27.0.1",
    "@types/node": "14.17.3",
    "@types/supertest": "2.0.11",
    "@typescript-eslint/eslint-plugin": "5.10.0",
    "@typescript-eslint/parser": "5.10.0",
    "chance": "1.1.8",
    "eslint": "8.7.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-prettier": "4.0.0",
    "jest": "27.4.7",
    "prettier": "2.5.1",
    "prisma": "3.8.1",
    "prisma-dbml-generator": "0.8.3",
    "supertest": "6.2.1",
    "ts-jest": "27.1.3",
    "ts-loader": "9.2.6",
    "ts-node": "10.4.0",
    "tsconfig-paths": "3.12.0",
    "typescript": "4.5.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  }
}
